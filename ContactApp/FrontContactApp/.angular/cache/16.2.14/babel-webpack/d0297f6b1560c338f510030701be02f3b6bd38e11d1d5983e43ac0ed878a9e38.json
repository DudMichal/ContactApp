{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/contact-detail\", a1];\n};\nfunction ContactsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 1);\n    i0.ɵɵtext(3, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ContactsComponent_li_1_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteContact(contact_r1.id));\n    });\n    i0.ɵɵtext(5, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", contact_r1.firstName, \" \", contact_r1.lastName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, contact_r1.id));\n  }\n}\nconst _c1 = function () {\n  return [\"/contact-form\"];\n};\nexport class ContactsComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n  ngOnInit() {\n    this.contactService.getContacts().subscribe(data => this.contacts = data, error => console.error('Failed to fetch contacts', error));\n  }\n  deleteContact(id) {\n    this.contactService.deleteContact(id).subscribe(() => this.contacts = this.contacts.filter(contact => contact.id !== id), error => console.error('Failed to delete contact', error));\n  }\n  static #_ = this.ɵfac = function ContactsComponent_Factory(t) {\n    return new (t || ContactsComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactsComponent,\n    selectors: [[\"app-contacts\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [3, \"click\"]],\n    template: function ContactsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\");\n        i0.ɵɵtemplate(1, ContactsComponent_li_1_Template, 6, 5, \"li\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵtext(3, \"Add Contact\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c1));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContactsComponent_li_1_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r3","contact_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","deleteContact","id","ɵɵadvance","ɵɵtextInterpolate2","firstName","lastName","ɵɵproperty","ɵɵpureFunction1","_c0","ContactsComponent","constructor","contactService","contacts","ngOnInit","getContacts","subscribe","data","error","console","filter","contact","_","ɵɵdirectiveInject","i1","ContactService","_2","selectors","decls","vars","consts","template","ContactsComponent_Template","rf","ctx","ɵɵtemplate","ContactsComponent_li_1_Template","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\dudmi\\source\\repos\\FrontContactApp\\src\\app\\contacts\\contacts.component.ts","C:\\Users\\dudmi\\source\\repos\\FrontContactApp\\src\\app\\contacts\\contacts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContactService } from '../contact.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit{\r\n\r\n  contacts: any[] = [];\r\n\r\n  constructor(private contactService: ContactService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contactService.getContacts().subscribe(\r\n      data => this.contacts = data,\r\n      error => console.error('Failed to fetch contacts', error)\r\n    );\r\n  }\r\n\r\n  deleteContact(id: number): void {\r\n    this.contactService.deleteContact(id).subscribe(\r\n      () => this.contacts = this.contacts.filter(contact => contact.id !== id),\r\n      error => console.error('Failed to delete contact', error)\r\n    );\r\n  }\r\n}\r\n","<ul>\r\n    <li *ngFor=\"let contact of contacts\">\r\n      {{ contact.firstName }} {{ contact.lastName }}\r\n      <button [routerLink]=\"['/contact-detail', contact.id]\">Details</button>\r\n      <button (click)=\"deleteContact(contact.id)\">Delete</button>\r\n    </li>\r\n  </ul>\r\n  <button [routerLink]=\"['/contact-form']\">Add Contact</button>\r\n  \r\n"],"mappings":";;;;;;;;;;ICCIA,EAAA,CAAAC,cAAA,SAAqC;IACnCD,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,gBAAuD;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACvEH,EAAA,CAAAC,cAAA,gBAA4C;IAApCD,EAAA,CAAAI,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,UAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,aAAA,CAAAL,UAAA,CAAAM,EAAA,CAAyB;IAAA,EAAC;IAACf,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAF3DH,EAAA,CAAAgB,SAAA,GACA;IADAhB,EAAA,CAAAiB,kBAAA,MAAAR,UAAA,CAAAS,SAAA,OAAAT,UAAA,CAAAU,QAAA,MACA;IAAQnB,EAAA,CAAAgB,SAAA,GAA8C;IAA9ChB,EAAA,CAAAoB,UAAA,eAAApB,EAAA,CAAAqB,eAAA,IAAAC,GAAA,EAAAb,UAAA,CAAAM,EAAA,EAA8C;;;;;;ADK5D,OAAM,MAAOQ,iBAAiB;EAI5BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAC,QAAQ,GAAU,EAAE;EAEkC;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CACzCC,IAAI,IAAI,IAAI,CAACJ,QAAQ,GAAGI,IAAI,EAC5BC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAC1D;EACH;EAEAjB,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACU,cAAc,CAACX,aAAa,CAACC,EAAE,CAAC,CAACc,SAAS,CAC7C,MAAM,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACO,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACnB,EAAE,KAAKA,EAAE,CAAC,EACxEgB,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAC1D;EACH;EAAC,QAAAI,CAAA,G;qBAlBUZ,iBAAiB,EAAAvB,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBhB,iBAAiB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9B9C,EAAA,CAAAC,cAAA,SAAI;QACAD,EAAA,CAAAgD,UAAA,IAAAC,+BAAA,gBAIK;QACPjD,EAAA,CAAAG,YAAA,EAAK;QACLH,EAAA,CAAAC,cAAA,gBAAyC;QAAAD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QANnCH,EAAA,CAAAgB,SAAA,GAAW;QAAXhB,EAAA,CAAAoB,UAAA,YAAA2B,GAAA,CAAArB,QAAA,CAAW;QAM7B1B,EAAA,CAAAgB,SAAA,GAAgC;QAAhChB,EAAA,CAAAoB,UAAA,eAAApB,EAAA,CAAAkD,eAAA,IAAAC,GAAA,EAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}